---
title: "Calculation of actual moisture regime for relative soil moisture classes from regional climatic moisture deficit"
subtitle: "Comparisons to expert assigned aSMR and forDRAT model"
author: "William H MacKenzie"
date: "2025-06-26"
format:
  typst:
    toc: true
    toc-depth: 3
    toc-title: Contents
    section-numbering: 1.1.1
    columns: 1
    text:
      font: "Atos"    # or another installed font
      size: 10pt  
editor: source
execute:
  echo: false
  error: false
  warning: false
  message: false
  fig.width: 6
  fig.height: 4
  fig.align: 'center'
  fig.cap: true
  fig.pos: H
  out.width: '80%'
  dev: pdf
  fig.ext: pdf
  cache: false
  fig.retina: 2
  dpi: 600
  fig.asp: 1.5
  fig.path: "./figures/"
---

```{r setup, include=FALSE}
require(foreach)
require(ggplot2)
require (ggthemes)
require(tidyverse)
require(data.table)
require(sf)
require(climr)
require(ggrepel)
require(tictoc)
library(dplyr)
library(purrr)
library(tibble)

```

# Introduction

The biogeoclimatic ecosystem classification (BEC) system uses relative soil moisture and nutrient regime to frame environmental differences between site series within an area of similar regional climate (biogeoclimatic subzone/variants). Relative soil moisture regime classes are defined from site and soils characteristics into nine classes representing an ordinal ranking of site conditions from the driest site conditions (very xeric: rSMR 0) to the wettest terrestrial conditions on the landscape (hydric: rSMR 8). The assessment of rSMR is independent of the regional climate: the site conditions describing xeric site is the same in all biogeoclimatic units (BGCs). This feature allows ecological characteristics of different BGCs to be compared aligning similar site and soils conditions. The site and soils conditions describing mesic relative soil moistures (rSMR 4) (and mesotrophic nutrient status) are considered to be those sites that best reflect regional climatic conditions and are said to be the **zonal site**. The mature ecosystem that occupies this relative position in a BGC is the zonal ecosystem and the differences in vegetation composition of zonal ecosystems used to differentiate and relate biogeoclimatic units.

However for some purposes, such as defining the water balance relationships for a species, the actual soil moisture regime, instead of the relative is required. Direct quantitative measurement of ecologically important soil moisture requires multi-year and multi-depth monitoring to be effective. Due to technological and cost limitations few studies have been undertaken to quantify soil moisture status of site series. With the high diversity of climatic and site conditions in the province quantitative measurement across even a representative set of environmental and ecosystem conditions is untenable. In response to this challenge, Klinka (1989;2000) proposed a classification system for defining actual soil moisture regime based broader approximations on the ratio of actual to potential evaporation and the number of months in deficit. {insert table} Regional Ecologists created a rSMR x aSMR grid for all mapped BGCs in 1990 using Klinka's first approximation (1989). This matrix was built primarily through interpretation of the actual soil moisture indicator status of the plant species occurring on each rSMR position. Some variation in the interpretation of this plant community - soil moisture relationship between experts and regions occurred and the matrix only applies to 129 of the 221 currently recognized biogeoclimatic units.

The aSMR of a site is a function of climatic precipitation inputs, soil water-holding capacity, and non-climatic soil water inputs often approximated by slope position.

This script represents a process to both complete the rSMR x aSMR matrix for all contemporary BGCs and provide a objective comparison between expert assigned aSMR ranking using regional climatic moisture deficit from the climr climate surface. The CMD model heuristically defines ranges of CMD that match expert aSMR categories for rSMR 4 (zonal) conditions and then creates a CMD adjustment for each azonal rSMR optimized to match the values from the expert grid. Draft work to create a species indicator value by rSMR as a check of these expert ratings proposed.

The forDRAT drought tool generates aSMR classes from an approximation of Craig Nitchke's drought equations. We compare CMD-aSMR ratings to those from forDRAT.

# Model build and Comparison

## Actual and Relative Soil Moisture Regime Classes

::: {typst}
**Actual SMR values, codes and names**

| aSMR Value | aSMR code | aSMR name       |
|------------|-----------|-----------------|
| 0          | XD        | Extremely dry   |
| 1          | ED        | Excessively dry |
| 2          | VD        | Very dry        |
| 3          | MD        | Moderately dry  |
| 4          | SD        | Slightly Dry    |
| 5          | F         | Fresh           |
| 6          | M         | Moist           |
| 7          | VM        | Very Moist      |
| 8          | W         | Wet             |

**Relative SMR values, codes and names**

| rSMR Value | rSMR code | rSMR name  |
|------------|-----------|------------|
| 0          | VX        | Very xeric |
| 1          | X         | Xeric      |
| 2          | SX        | Subxeric   |
| 3          | SM        | Submesic   |
| 4          | M         | Mesic      |
| 5          | SHG       | Subhygric  |
| 6          | HG        | Hygric     |
| 7          | SHD       | Subhydric  |
| 8          | HD        | Hydric     |
:::

## Determine CMD range associated with expert assigned aSMR for Zonal Sites

The development of a seamless climate surface for British Columbia presented an opportunity for linking aSMR as defined by AET/PET ratio to the climate moisture deficit (CMD). Since the zonal site is thought to best reflect climatic conditions a comparison of the CMD range representing each of the aSMR classes as defined in the 1990 expert grid (with some modern updates) was used to define some initial CMD ranges that represent each class. Errors in expert aSMR assignment and in the Climate Surface are both likely but the expert ranking are treated as generally accurate in aggregate.

`#show figure: set block(breakable: true)`{=typst}

```{r prepare data, echo=FALSE, message = FALSE, warning=FALSE}
# import grid points attributed to BGC and select a set
# coords <- fread("D:/OneDrive - Government of BC/CommonTables/WNA_BGCv_13_4_2km_gridpts.csv")# %>% dplyr::select(-BGC)
# coords <- coords %>%
#   group_by(BGC) %>%
#   sample_n(100, replace = TRUE) %>% ungroup %>% 
#   rename(lon = xcoord, lat = ycoord)
# count_tp <- coords %>% dplyr::count(BGC)
# coords_sf <- st_as_sf(coords, coords = c("lon","lat"), crs = 4326)
# coords <- as.data.frame(coords) %>% distinct
# setcolorder(coords, c("lat", "lon","elev","id"))
# coords.bgc <- coords %>% dplyr::select(id, BGC, lon,lat,elev)
# ## download climr data
# tic()
# clim_vars <- climr::downscale(setDT(coords),  
#                               vars = list_vars(), 
#                               return_refperiod = TRUE, 
#                               cache = TRUE)
#allDat <- left_join(coords.bgc, clim_vars) %>% as.data.table %>% mutate(PERIOD == "1961-1990")
allDat <- fread("D:/OneDrive - Government of BC/CommonTables/BGC_climate/WNA_v13_4_climr_2km.csv")
CMDtemp <- allDat %>% select("CMD", "CMD_08")
AllBGC <- unique(allDat$BGC) %>% data.frame() %>% pull()
# 
# allDat <- allDat %>%
#   # Scale MAT and MAP to [0, 1] for comparability
#   mutate(
#     MAT_scaled = scale(MAT, center = TRUE, scale = TRUE),
#     MAP_scaled = scale(MAP, center = TRUE, scale = TRUE)
#   ) %>%
#   # Invert MAP since low precipitation increases CMD
#   mutate(
#     MAP_inverse = -MAP_scaled
#   ) %>%
#   # Normalize temp and precip signals to estimate their share
#   mutate(
#     CMD_temp_weight = MAT_scaled / (MAT_scaled + MAP_inverse),
#     CMD_precip_weight = MAP_inverse / (MAT_scaled + MAP_inverse)
#   ) %>% dplyr::select(
#     BGC, State,CMD, MAT, MAP, CMD_temp_weight, CMD_precip_weight
#   ) %>% 
#   # Clip any extreme values if necessary
#   mutate(
#     CMD_temp_weight = pmax(pmin(CMD_temp_weight, 1), 0),
#     CMD_precip_weight = pmax(pmin(CMD_precip_weight, 1), 0)
#   ) %>% dplyr::select(
#     BGC, State,CMD, MAT, MAP, CMD_temp_weight, CMD_precip_weight
#   )
#   WNA.climate <- WNA.climate %>%
#   mutate(CMD_driver_index = CMD_precip_weight - CMD_temp_weight) %>% 
#     mutate(CMD_driver_type = case_when(
#     CMD_driver_index < -0.33 ~ "Temperature-Dominated üî•",
#     CMD_driver_index >  0.33 ~ "Precipitation-Dominated üåß",
#     TRUE ~ "Mixed Influence ‚öñÔ∏è"
#   ))


## ID BGCs with consistent summer precipitation = less drought prone on drier rSMR than expected
## Especially to fix hypermartime
sPPTtemp <- allDat %>% select("BGC", "PERIOD", "PPT_05","PPT_06","PPT_07","PPT_08","PPT_09" )
sPPTtemp$Moist <- rowSums(sPPTtemp[,3:7] >90) #count of growing season months with >90mm rain
#sPPTtemp$Dry <- rowSums(sPPTtemp[,3:7] <30) #count of growing season months with <30mm rain
xx <- sPPTtemp %>% filter(BGC == "ESSFxv1")
ratio.moist <- sPPTtemp %>% select(BGC, PERIOD, Moist) %>% group_by (BGC, PERIOD) %>% summarize (count= length(BGC), moistcount = length(BGC[Moist == 5]), ratio = moistcount/count)
sPPTtemp$Moist <- ifelse(sPPTtemp$Moist > 4, 1, 0) # flag locations where all months are >90mm rain. If all months then always overcapacity zonal soils
                     # ifelse(temp2$Moist >3, 5.5,""))
sPPTtemp <- sPPTtemp %>% select("BGC", "PERIOD", "Moist")
moist.multiply <- ratio.moist %>% select(BGC, PERIOD, ratio) %>% mutate(multiplier = 1+ratio) %>% data.table
#allDat[moist.multiply, CMD := CMD / multiplier, on = "BGC"]

wPPTtemp <- allDat[,c("BGC", "PERIOD", "PPT_at","PPT_wt","PAS")]
allDat2 <- cbind(wPPTtemp,CMDtemp)
#allDat <- cbind(wPPTtemp,sPPTtemp[c("Moist")])
#allDat <- cbind(allDat,temp,temp2) ### use this one if Moist indicator is completed above
allDat2$PPT.dorm <- allDat2$PPT_at + allDat2$PPT_wt
  ####To adjust in zones with prolonged snowpack remove CMD from early growing season months
## BGCs with or below heavy snow packs
BGC_Special <- fread("./inputs/BGC_Special.csv", data.table = FALSE)
allDat2 <- left_join(allDat2,BGC_Special, by = c("BGC" = "BGC"))
allDat2 <- allDat2 %>% mutate(CMD = ifelse(is.na(Special), CMD, CMD_08)) %>% select(-Special, -CMD_08) %>% drop_na()

##-----Start of Growing season deficits 
###adds deficit from incomplete recharge in dormant season. Estimated holding capacity of loamy soils is approximately 350mm.
## 500m might be a better fit - approximates the extreme years
allDat2 <- allDat2[,c("BGC", "PERIOD", "CMD","PPT.dorm")]
allDat2$Def <- 350 - allDat2$PPT.dorm 
allDat2$Def[allDat2$Def < 0] <- 0 #negative values set to zero = no deficit
allDat2$CMD <- allDat2$CMD + allDat2$Def
allDat2 <- allDat2 %>% filter(PERIOD == "1961_1990") # use only 1961-1990 period for now)
allDat2 <- allDat2[,c("BGC", "PERIOD", "CMD")]

allDat3 <- allDat2 %>%
  group_by(BGC, PERIOD) %>%
  summarize(across(everything(), median)) %>% ungroup %>% select(-PERIOD)# CMD now equals CMD.total
    #CMD <- CMD %>% mutate(CMD.hot = CMD * 1.25) # 25% increase in CMD for insolation slopes (from Jackson 1966)
    #CMD <- CMD %>% mutate(CMD.cold = CMD * 0.85)
```

```{r create tables, echo=FALSE, message = FALSE, warning=FALSE}

#period = "1961_1990"; cmd = allDat3
create_cmd_rsmr_grid <- function(cmd) {
  # Filter by PERIOD
  CMD <- cmd 
#%>% select(BGC, all_of(cmd.type))
  
  # Compute wetter rSMR values
  for (i in 1:3) {
    CMD[, 2 + i] <- CMD[, 1 + i] / 2
  }

  # Rename columns
  colnames(CMD) <- c("BGC", "rSMR4", "rSMR5", "rSMR6", "rSMR7")
  CMD <- CMD[, c("BGC", "rSMR7", "rSMR6", "rSMR5", "rSMR4")]
  # Compute drier rSMR values
  for (i in 1:4) {
    CMD[, length(CMD) + 1] <- CMD[, length(CMD)] + 125
  }

  # Rename newly added columns
  colnames(CMD)[6:9] <- c("rSMR3", "rSMR2", "rSMR1", "rSMR0")

  # Reorder columns
  CMD <- CMD[, c("BGC", "rSMR7", "rSMR6", "rSMR5", "rSMR4", "rSMR3", "rSMR2", "rSMR1", "rSMR0")]

  # Filter by specified BGCs
  #CMD <- CMD %>% filter(BGC %in% AllBGC)

  # Add cmd.type and period identifiers
  #CMD$cmd.type <- cmd.type
  #CMD$PERIOD <- period

  return(CMD)
}

# Apply function iteratively
rsmr_cmd_list <- create_cmd_rsmr_grid(cmd = allDat3)

# Combine results
rsmr_cmd <- bind_rows(rsmr_cmd_list)

# Convert to long format
rsmr_cmd_long <- rsmr_cmd %>%
  pivot_longer(cols = -c("BGC"), names_to = "rSMR", values_to = "CMD.site") %>%
  ungroup() %>%
  data.table()# %>%
  #select(-cmd.type)
rsmr_cmd_long[moist.multiply, CMD.site := CMD.site / multiplier, on = c("BGC")]
# Save as CSV if needed
fwrite(rsmr_cmd_long, file = "./outputs/CMD_by_rSMR_long.csv")

rules <- read.csv("./inputs/aSMR_Rules_HalfStep_v13_23June2025.csv")
rsmr_asmr_long <- rsmr_cmd_long %>%
  left_join(rules, by = "rSMR") %>%
  filter(CMD.site <= CMD) %>%
  group_by(BGC,  rSMR) %>%  # ensure row-wise logic if needed
  slice_max(aSMR, with_ties = FALSE) %>%
  ungroup() %>% select(BGC, rSMR, aSMR)
fwrite(rsmr_asmr_long, file = "./outputs/aSMR_by_rSMR_long.csv")# for use in droughtprone sites
all_cmd <- rsmr_asmr_long   %>%
  arrange(BGC) %>%
  pivot_wider(names_from = rSMR, values_from = aSMR)
fwrite (all_cmd, "./outputs/CMDcalc_aSMR_by_rSMR_matrix.csv")

```

```{r }
#| label: fig-zonal-cmd-ranges
#| fig-cap: "CMD ranges for Expert aSMR of Zonal sites"
#| fig-cap-location: bottom
#| warning: false
#| fig-align: "center"

expGrid <- read.csv("./inputs/ExpertGrid_2025.csv") %>% filter(new_old != "new") %>% select(-new_old)
expGrid$BGC <- gsub("[[:space:]]","",expGrid$BGC)
colnames(expGrid)[-1] <- paste(colnames(expGrid)[-1],"_Exp", sep = "")
CMD.zonal <- rsmr_cmd %>% select(BGC, rSMR4)
expGrid.zonal <- expGrid %>% select(BGC, rSMR4_Exp) %>% mutate(rSMR4_Exp= as.factor(rSMR4_Exp))
CMDrange <- left_join(expGrid.zonal, CMD.zonal,  by = "BGC")
#CMDrange$rSMR4_Exp <- as.factor(CMDrange$rSMR4_Exp)
#CMDrange$BGC <- as.factor(CMDrange$BGC)

ggplot(CMDrange, aes(rSMR4_Exp, rSMR4)) +
  geom_boxplot(stat = "boxplot", varwidth = TRUE) +
  geom_point(shape = 23, fill = "red", size = 2) +
  xlab("aSMR Value (5=Fresh)") +
  ylab("CMD.total") +
  geom_hline(yintercept = seq(0, max(CMDrange$rSMR4, na.rm = TRUE), by = 100),
             color = "gray80", linetype = "dashed") +
  ggrepel::geom_text_repel(aes(label = BGC), size = 2, maxoverlaps = 103)+
   theme_few() +
  theme(
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9)
  )

#
# ggsave("./outputs/CMD_ranges of Expert aSMR of Zonal.pdf", plot = p, dpi = "print", device = "pdf", width = 15, height = 15, units = "cm")
# ggsave("./outputs/CMD_ranges.png", plot = p, dpi = "print", device = "png", width = 15, height = 15, units = "cm")
# plot(p)


```

### Modelled Range of Climatic Moisture Deficit for aSMR Class of Zonal Sites

With review of the expert ranges a standardized range of CMD for each 1/2 aSMR class was assigned. We estimate aSMR in 1/2 class steps to allow better integration with the rSMR scale on edatopic grids. Regional CMD was modified in some cases where BGCs have: consistent summer precipitation leading to less drought on xeric sites (e.g. hypermaritime); incomplete winter recharge of water table (e.g. BG, PP, driest IDF); or BGCs that occur below higher elevation subzones with very deep snowpacks (e.g. ICHvk, vc, SBSvk). The modelled aSMR classes were then compared to the expert aSMR classes for the zonal sites and the step differences counted. Heuristically the ranges were adjusted to minimize discrepancy from the expert assigned values.

```{r }
#| label: fig-zonal-cmd-ranges-model-coast
#| fig-cap: "CMD ranges for modelled aSMR of coastal Zonal sites"
#| fig-cap-location: bottom
#| warning: false
#| fig-align: "center"
zonal_asmr <- all_cmd %>% select(BGC, rSMR4) %>% rename(aSMR = rSMR4)
zonal_CMD <- rsmr_cmd %>% select(BGC, rSMR4)
CMDrange <- left_join(zonal_CMD, zonal_asmr, by = c("BGC"))
#CMDrange$rSMR4 <- as.factor(CMDrange$rSMR4)
CMDrange$aSMR <- as.factor(CMDrange$aSMR)
## split in coast and interior
CMD.coast <- CMDrange %>% filter(grepl("^(CDF|CMA|CWH|MH|IDFww|ICHun|ESSFun1|MSun)", BGC))
CMD.interior <- CMDrange %>% filter(grepl("^(BG|IDF|ICH|MS|SBS|SBPS)", BGC))

CMDrange_reduced <- CMDrange %>%  arrange(aSMR) %>%
  group_by(aSMR) %>%
  slice_sample(n = 7) %>%
  ungroup()
ggplot(CMD.coast, aes(x = aSMR, y = rSMR4)) +
  geom_boxplot(stat = "boxplot", varwidth = TRUE) +
  geom_point(shape = 23, fill = "red", size = 2) +
  geom_hline(yintercept = seq(0, max(CMDrange$rSMR4, na.rm = TRUE), by = 100),
             color = "gray80", linetype = "dashed") +
  xlab("aSMR Class") +
  ylab("CMD.total") +
  geom_text_repel(aes(label = BGC),
                size = 2,
                #direction = "x", 
                box.padding = 0.1,
                max.overlaps = Inf)+
   theme_few() +
  theme(
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9)
  )
```

```{r }
#| label: fig-zonal-cmd-ranges-model-interior
#| fig-cap: "CMD ranges for modelled aSMR of interior Zonal sites"
#| fig-cap-location: bottom
#| warning: false
#| fig-align: "center"

ggplot(CMD.interior, aes(x = aSMR, y = rSMR4)) +
  geom_boxplot(stat = "boxplot", varwidth = TRUE) +
  geom_point(shape = 23, fill = "red", size = 2) +
  geom_hline(yintercept = seq(0, max(CMDrange$rSMR4, na.rm = TRUE), by = 100),
             color = "gray80", linetype = "dashed") +
  xlab("aSMR Class") +
  ylab("CMD.total") +
  geom_text_repel(aes(label = BGC),
                size = 2,
                #direction = "x", 
                box.padding = 0.1,
                max.overlaps = Inf)+
   theme_few() +
  theme(
    axis.title.x = element_text(size = 9),
    axis.title.y = element_text(size = 9)
  )
# ggsave("./outputs/CMD_ranges of Expert aSMR of Zonal.pdf", plot = p, dpi = "print", device = "pdf", width = 15, height = 15, units = "cm")
# ggsave("./outputs/CMD_ranges.png", plot = p, dpi = "print", device = "png", width = 15, height = 15, units = "cm")


```

### Comparison between CMD modelled and expert aSMR for ZONAL sites

The difference in aSMR class between the model and the expert grid are calculated for limited list of 136 BGCs found in the expert matrix. Since the original expert grid does not apply half classes, many 1/2 class mismatches should be expected and we view these as non-significant differences in assessment. 13 out of 136 BGCs have a difference \>=1 aSMR class between the model and expert grid (8 are wetter and 5 are drier).

```{r }

expGrid.zonal <- expGrid %>% select(BGC, rSMR4_Exp)
compare.zonal <- left_join(expGrid.zonal, zonal_asmr,  by = "BGC") %>% 
  mutate(rSMR4_Exp = as.numeric(rSMR4_Exp)) %>%
  mutate(asmr.diff = aSMR - rSMR4_Exp) %>%
  mutate(not.sig.diff = between(asmr.diff, -0.5, .5)) %>%
  mutate(asmr.diff = as.factor(asmr.diff)) %>%
  mutate(Zone = gsub("[^A-Z]", "", BGC)) %>% drop_na() %>% rename(expert.aSMR = rSMR4_Exp)
diff <- compare.zonal %>% count(asmr.diff) %>% rename(aSMR_difference = asmr.diff, count = n)

gt::gt(diff) %>%
  gt::tab_header(
    title = "Count of aSMR differences on zonal sites: CMD vs Expert"
  ) %>%
  gt::tab_footnote(
    footnote = "positive aSMR_difference = CMD-aSMR predicts wetter than expert.",
    locations = gt::cells_column_labels(columns = aSMR_difference)
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14)
  )

```

The mismatches >= 1 aSMR are for subzone/variants in the BG (5 wetter), BWBS (2 drier), CWH (1 drier), 3 ESSF (1 drier and 2 wetter), IDF (1 wetter), and SBS (2 drier). Review of these BGCs suggests that the modelled aSMR may be more representative than the expert assessment in these cases. For example, in the original expert aSMR for the BG units, rSMR4 was aSMR 1 and rSMR5 was aSMR 4; a 3-step jump, which seems problematic.

```{r }

sig.diff <- compare.zonal %>%
  filter(not.sig.diff == FALSE) %>%
  select(-not.sig.diff, -Zone) %>%
  rename(aSMR_difference = asmr.diff)

gt::gt(sig.diff) %>%
  gt::tab_header(
    title = "BGCs with significant difference in zonal aSMR: CMD vs Expert aSMR"
  ) %>%
  gt::tab_footnote(
    footnote = "positive aSMR_difference = CMD-aSMR predicts wetter than expert.",
    locations = gt::cells_column_labels(columns = aSMR_difference)
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14)
  )
```

## Determine CMD range associated with expert assigned aSMR for Zonal Sites
Regional CMD values are adjusted for azonal rSMR positions adding 125 CMD for each step away from zone. The additive value is reduced in BGCs with consistently high (90mm) monthly growing season precipitation .
For each rSMR wetter than zonal CMD is divided by two. This adjustment factor was made heuristically to most closely match the expert grid.

### Comparison between CMD modelled and expert aSMR for all sites

 The range of values representing an aSMR class remain unchanged for rSMR 0-4. For sites that accumulate moisture due to slope position or other seepage, the range of CMD is shifted 1/2 step wetter with each rSMR. For example 150 CMD represents the uppder limite for aSMR 5 (fresh) in rSMR 0-4 positions, aSMR 5.5 for rSMR5, aSMR 6 for rSMR6, and aSMR 6.5 for rSMR7.

```{r }
expGrid <- fread("./inputs/ExpertGrid_2025.csv") %>% filter(new_old != "new") %>% select(-new_old)
expGrid$BGC <- gsub("[[:space:]]","",expGrid$BGC)
colnames(expGrid)[-1] <- paste(colnames(expGrid)[-1],"_Exp", sep = "")
CMDrange2 <- merge(CMDrange, expGrid, by = "BGC")
CMDrange2$rSMR4_Exp <- as.factor(CMDrange2$rSMR4_Exp)
CMDrange2$BGC <- as.factor(CMDrange2$BGC)
exp.asmr <- expGrid %>% filter(BGC %in% all_cmd$BGC) %>% data.table
cmd.asmr <- all_cmd %>% filter(BGC %in% exp.asmr$BGC)%>% data.table
rSMR.exp <- melt(exp.asmr, id.vars= c("BGC"), variable_name = "rSMR", value.name = "aSMR.exp") %>% 
  mutate(BGC = gsub(" ", "", BGC, fixed = TRUE), variable = gsub("_Exp", "", variable, fixed = TRUE))
rSMR.cmd <- melt(cmd.asmr, id.vars= c("BGC"), variable_name = "rSMR", value.name = "aSMR.cmd") %>% 
  mutate(variable = gsub("_", "", variable, fixed = TRUE))
aSMRdiff <- left_join(rSMR.cmd, rSMR.exp, by = c("BGC", "variable")) %>% drop_na %>% mutate(asmr.diff = aSMR.cmd - aSMR.exp)
#write.csv(aSMRdiff, "./outputs/Comparison of Modelled aSMR to Expert matrix.csv")
aSMRdiff <-aSMRdiff %>% mutate(not.sig.diff = between(asmr.diff, -0.5, .5)) 
aSMRdiff2 <- aSMRdiff %>% mutate(Zone = gsub("[^A-Z]", "", BGC)) %>% mutate(asmr.diff = as.factor(asmr.diff))%>%
  mutate(not.sig.diff = ifelse(asmr.diff == 0, "zero", not.sig.diff)) %>%
  drop_na()
diffs <- aSMRdiff  %>% count(variable, asmr.diff) %>% mutate(asmr.diff = as.factor(asmr.diff)) %>% 
  pivot_wider(names_from = asmr.diff, values_from = n, values_fill = 0) %>% 
  rename(aSMR_difference = variable)

aSMRdiff3 <- aSMRdiff2 %>% filter(not.sig.diff == FALSE)  %>% select(-not.sig.diff, -Zone) %>% arrange(BGC, variable) %>% rename(rSMR = variable, aSMR_difference = asmr.diff)

sig.diffs <- tibble(
  count.sig.diffs = nrow(aSMRdiff3),
  count.rsmr = nrow(aSMRdiff2),
  ratio.sig.diffs = round(nrow(aSMRdiff3) / nrow(aSMRdiff2), 3))

gt::gt(diffs) %>%
  gt::tab_header(
    title = "Count of aSMR difference at all rSMR: CMD vs Expert aSMR"
  ) %>%
  gt::tab_footnote(
    footnote = "positive aSMR_difference = CMD predicts wetter than expert.",
    locations = gt::cells_column_labels(columns = aSMR_difference)
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14)) %>%
  gt::tab_source_note(
    source_note = paste0(
      "Number of significant differences: ", sig.diffs$count.sig.diffs,
      "; Total comparisons: ", sig.diffs$count.rsmr,
      "; Proportion significantly different: ", sig.diffs$ratio.sig.diffs)
    )



```

#### List of BGC x rSMR combinations with significant differences in aSMR 

```{r }

gt::gt(aSMRdiff3) %>%
  gt::tab_header(
    title = "Significant aSMR difference at rSMR: CMD vs Expert aSMR"
  ) %>%
  gt::tab_footnote(
    footnote = "positive aSMR_difference = CMD predicts wetter than expert.",
    locations = gt::cells_column_labels(columns = aSMR_difference)
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14)
   )# %>%
  # gt::tab_source_note(
  #   source_note = paste0(
  #     "Number of significant differences: ", sig.diffs$count.sig.diffs,
  #     "; Total comparisons: ", sig.diffs$count.rsmr,
  #     "; Proportion significantly different: ", sig.diffs$ratio.sig.diffs
  #   )
  #)


```

### Table of CMD-modelled aSMR x rSMR for all BGCv13

The following matrix of the estimated aSMR for each rSMR position by BGC. The values are derived from the CMD model and represent the aSMR class for each rSMR position.

```{r aSMR byrSMR classes, echo=FALSE, message = FALSE, warning=FALSE}
all_cmd2 <- all_cmd
colnames(all_cmd2 ) <- c("BGC", "rSMR0", "rSMR1", "rSMR2", "rSMR3", "rSMR4", "rSMR5", "rSMR6", "rSMR7")
gt::gt(all_cmd2) %>%
  gt::tab_header(
    title = "aSMR for rSMR by BGC"
  ) %>%
  gt::tab_footnote(
    footnote = "aSMR classes calculated from CMD values",
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_column_labels()  # bolds all column names
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_body(columns = BGC)  # bolds the BGC values
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14)
  )

# gt::gt(all_cmd2,
#        rownames_to_stub = FALSE) %>% 
#   gt::tab_stubhead(label = "BGC") %>%
#   gt::tab_header(
#     title = "aSMR for rSMR by BGC",
#     subtitle = "aSMR classes calculated from CMD values") %>% 
#     gt::tab_options(
#          column_labels.font.size = 12,
#          column_labels.font.weight = "bold",
#         table.font.size = 12,
#         table.font.weight = "bold")
all_cmd.coast <- all_cmd %>%  filter(grepl("^(CDF|CMA|CWH|MH|IDFww|ICHun|ESSFun1|MSun)", BGC))
fwrite(all_cmd.coast, file = "./outputs/asmr_x_rsmr_Coast.csv")
#all_cmd <- all_cmd %>% rownames_to_column(var = "BGC")
saveRDS(all_cmd, file = "./outputs/rSMR_aSMR_ModelGrid.rds")
fwrite(all_cmd, file = "./outputs/WNAv13_rSMR_aSMR_ModelGrid.csv")
```

### CMD ruleset
```{r}
rules <- read.csv("./inputs/aSMR_Rules_HalfStep_v13_23June2025.csv") %>% rename(maxCMD = CMD)
gt::gt(rules) %>%
  gt::tab_header(
    title = "aSMR Rules for CMD by rSMR"
  ) %>%
  gt::tab_footnote(
    footnote = "aSMR classes calculated from CMD values",
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_column_labels()  # bolds all column names
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14)
  )
```


### Original expert-assigned aSMR by rSMR for BGCs

The original expert aSMR grid is provided for comparison. The aSMR classes are assigned to each BGC based on expert assessment. The values are primarily not in 1/2 class steps, so the modelled aSMR may differ by 1/2 class from the expert assessment.

```{r }
#| label: asmr-exprt
#| warning: false
#| tbl-align: "left"
expGrid <- fread("./inputs/ExpertGrid_2025.csv") %>% filter(new_old != "new") %>% select(-new_old)
#expGrid <- expGrid %>% select(-1)# %>% filter(grepl('^CWH|^CDF|MH|IDFww|CMA', BGC)) 
gt::gt(expGrid,
       rownames_to_stub = FALSE) %>% 
  gt::tab_stubhead(label = "BGC") %>%
  gt::tab_header(
    title = "aSMR for rSMR by BGC",
    subtitle = "aSMR from expert assessment") %>% 
    gt::tab_options(
         column_labels.font.size = 10,
         column_labels.font.weight = "bold",
        table.font.size = 10,
        table.font.weight = "bold")

#saveRDS(all_cmd, file = "./outputs/rSMR_aSMR_ModelGrid.rds")

```

### Graphical comparison of CMD model vs expert aSMR differences

```{r }
#| label: fig-difference-cmd-expert
#| fig-cap: "aSMR Classes from CMD Model compared to expert assessment by Zone"
#| fig-subcap: "CMD is drier (negative) or wetter (positive)"
#| fig-cap-location: bottom
#| warning: false
#| fig-align: "center"
# colnames(rSMRListexp) <- c("BGC", "rSMR", "aSMRE")
# Loop through unique BGC values and generate individual plots
unique_zones <- unique(aSMRdiff2$Zone)

for (zone in unique_zones) {
  # Filter dataset for the current BGC
  aSMRdiff_subset <- aSMRdiff2 %>% filter(Zone == zone)
  
  # Create the histogram
asmr.plot <- ggplot(aSMRdiff_subset, aes(asmr.diff, fill = not.sig.diff)) +
  geom_bar() +
  facet_wrap(~ variable, nrow = 2) +
  geom_vline(xintercept = 0, colour = "green") +
  xlab("aSMR Difference") +
  ylab("Count") +
  scale_fill_manual(values = c("zero" = "darkgreen", "TRUE" = "green", "FALSE" = "orange")) +
  theme_hc() +
  ggtitle(paste0("Histogram of CMD vs expert aSMR difference for ", zone)) +
  theme(
    plot.title = element_text(size = 10),
    axis.title = element_text(size = 8),
    axis.text = element_text(size = 8),
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 8),
    strip.text = element_text(size = 8) 
  )

plot(asmr.plot)
  # Save each plot as an image file
  #ggsave(filename = paste0("aSMRdiff_", zone, ".png"), plot = plot, width = 8, height = 6)
}
# plot(dr)
# ggsave("./outputs/aSMR difference expert_climate by rSMR.pdf", plot = dr, dpi = "print", device = "pdf", width = 15, height = 15, units = "in")
# dev.off()

```

## forDRAT comparison to Expert assigned aSMR

```{r drought tool aSMR, echo=FALSE, message = FALSE, warning=FALSE}
DRT <- fread("./inputs/DroughtTool_AETxrSMR.csv") %>% filter(Period == "1961-1990") %>%  mutate(rSMR = paste0("rSMR", RSMR)) %>% select(BGC, rSMR, AET)
DRT <- pivot_wider(DRT, id_cols = BGC, names_from = rSMR, values_from = AET)
DRT <- DRT %>% filter(BGC %in% AllBGC)

rules <- read.csv("./inputs/AET_Rules_HalfStep_v12_30Oct2024.csv")

### import rules on range of CMD which equates to aSMR
aSMRClass <- function(x) {
  for (i in seq_along(ruleSelect$AET))  {
    if (i < length(ruleSelect$AET) && x <= ruleSelect$AET[i+1]) {
      return(ruleSelect$aSMR[i])
    }
  }
  return(x)
}

# Initialize an empty data.frame to accumulate results
all_aet <- data.frame()
#i=1
for (i in seq_along(DRT$BGC)) {
  DRT.bgc <- DRT[i,]
  test <- foreach(SMR = colnames(DRT.bgc)[-1], .combine = cbind) %do% {
    temp <- DRT.bgc %>% select(!!as.name(SMR))
    temp[is.na(temp)] <- 0
    ruleSelect <- rules[rules$SMRLevel == 0, -1]
    out <- sapply(temp, FUN = aSMRClass)
    out
  }
  
  bgc <- as.data.frame(test)
  row.names(bgc) <- DRT.bgc$BGC
  colnames(bgc) <- c("rSMR1", "rSMR2", "rSMR3", "rSMR4", "rSMR5")
  
  # Accumulate the test data into all_tests
  all_aet <- rbind(all_aet, bgc)
}
  all_aet <- all_aet %>% rownames_to_column(var = "BGC")
#saveRDS(all_aet, file = "./outputs/rSMR_aSMR_DroughtModel.rds")
#fwrite(all_aet, file = "./outputs/rSMR_aSMR_DroughtModel.csv")
```

### Difference between forDRAT and the Expert aSMR by BGC

```{r }
exp.asmr <- expGrid %>% filter(BGC %in% all_aet$BGC)%>% data.table
aet.asmr <- all_aet %>% filter(BGC %in% exp.asmr$BGC)%>% data.table

rSMR.exp <- melt(exp.asmr, id.vars = c("BGC"), variable_name = "rSMR", value.name = "aSMR.exp") %>% 
  mutate(BGC = gsub(" ", "", BGC, fixed = TRUE), variable = gsub("_Exp", "", variable, fixed = TRUE))
rSMR.aet <- melt(aet.asmr, id.vars= c("BGC"), variable_name = "rSMR", value.name = "aSMR.aet") %>% 
  mutate(variable = gsub("_", "", variable, fixed = TRUE))
aSMRdiff <- left_join(rSMR.aet, rSMR.exp, by = c("BGC", "variable")) %>% drop_na %>% mutate(asmr.diff = aSMR.aet - aSMR.exp)
#write.csv(aSMRdiff, "./outputs/Comparison of Modelled aSMR to Expert matrix.csv")
aSMRdiff <-aSMRdiff %>% mutate(not.sig.diff = between(asmr.diff, -0.5, .5)  ) 

aSMRdiff.fordrat <- aSMRdiff %>% mutate(Zone = gsub("[^A-Z]", "", BGC)) %>% mutate(asmr.diff = as.factor(asmr.diff))%>%
  mutate(not.sig.diff = ifelse(asmr.diff == 0, "zero", not.sig.diff)) %>%
  drop_na()

diffs <- aSMRdiff  %>% count(variable, asmr.diff) %>% mutate(asmr.diff = as.factor(asmr.diff)) %>% 
  pivot_wider(names_from = asmr.diff, values_from = n, values_fill = 0) %>% 
  rename(aSMR_difference = variable)
aSMRdiff.fordrat2 <- aSMRdiff.fordrat %>% filter(not.sig.diff == FALSE)  %>% select(-not.sig.diff, -Zone) %>% arrange(variable, BGC) %>% rename(rSMR = variable, aSMR_difference = asmr.diff)

sig.diffs <- tibble(
  count.sig.diffs = nrow(aSMRdiff.fordrat2 ),
  count.rsmr = nrow(aSMRdiff.fordrat),
  ratio.sig.diffs = round(nrow(aSMRdiff.fordrat2 ) / nrow(aSMRdiff.fordrat), 3))

gt::gt(diffs) %>%
  gt::tab_header(
    title = "Count of aSMR difference at all rSMR: CMD vs Expert aSMR"
  ) %>%
  gt::tab_footnote(
    footnote = "positive aSMR_difference = CMD predicts wetter than expert.",
    locations = gt::cells_column_labels(columns = aSMR_difference)
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14))%>%
  gt::tab_source_note(
    source_note = paste0(
      "Number of significant differences: ", sig.diffs$count.sig.diffs,
      "; Total comparisons: ", sig.diffs$count.rsmr,
      "; Proportion significantly different: ", sig.diffs$ratio.sig.diffs)
    )
```

```{r }
aSMRdiff.fordrat2  <- aSMRdiff.fordrat %>% filter(not.sig.diff == FALSE)  %>% select(-not.sig.diff, -Zone) %>% arrange(variable, BGC) %>% rename(rSMR = variable, aSMR_difference = asmr.diff)

gt::gt(aSMRdiff.fordrat2 ) %>%
  gt::tab_header(
    title = "List of BGC x rSMR with significant difference between forDRAT and Expert aSMR for Zonal Sites"
  ) %>%
  gt::tab_footnote(
    footnote = "positive aSMR_difference = forDRAT predicts wetter than expert.",
    locations = gt::cells_column_labels(columns = aSMR_difference)
  ) %>%
  gt::tab_style(
    style = gt::cell_text(weight = "bold"),
    locations = gt::cells_title(groups = "title")
  ) %>%
  gt::tab_options(
    table.font.size = "small",
    data_row.padding = gt::px(2),
    heading.title.font.size = gt::px(14))#%>%
  # gt::tab_source_note(
  #   source_note = paste0(
  #     "Number of significant differences: ", sig.diffs$count.sig.diffs,
  #     "; Total comparisons: ", sig.diffs$count.rsmr,
  #     "; Proportion significantly different: ", sig.diffs$ratio.sig.diffs
  #   )
  
```

### Graphical comparison of forDRAT model vs expert aSMR differences

```{r }
#| label: fig-difference-fordrat-expert
#| fig-cap: "aSMR Classes from forDRAT Model compared to expert assessment by Zone"
#| fig-subcap: "CMD is drier (negative) or wetter (positive)"
#| fig-cap-location: bottom
#| warning: false
#| fig-align: "center"
# colnames(rSMRListexp) <- c("BGC", "rSMR", "aSMRE")
# Loop through unique BGC values and generate individual plots
unique_zones <- unique(aSMRdiff.fordrat$Zone)

for (zone in unique_zones) {
  # Filter dataset for the current BGC
  aSMRdiff_subset <- aSMRdiff.fordrat %>% filter(Zone == zone)
  
  # Create the histogram
asmr.plot <- ggplot(aSMRdiff_subset, aes(asmr.diff, fill = not.sig.diff)) +
  geom_bar() +
  facet_wrap(~ variable, nrow = 2) +
  geom_vline(xintercept = 0, colour = "green") +
  xlab("aSMR Difference") +
  ylab("Count") +
  scale_fill_manual(values = c("zero" = "darkgreen", "TRUE" = "green", "FALSE" = "orange")) +
  theme_hc() +
  ggtitle(paste0("Histogram of CMD vs expert aSMR difference for ", zone)) +
  theme(
    plot.title = element_text(size = 10),
    axis.title = element_text(size = 8),
    axis.text = element_text(size = 8),
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 8),
    strip.text = element_text(size = 8) 
  )

plot(asmr.plot)
  # Save each plot as an image file
  #ggsave(filename = paste0("aSMRdiff_", zone, ".png"), plot = plot, width = 8, height = 6)
}
# plot(dr)
# ggsave("./outputs/aSMR difference expert_climate by rSMR.pdf", plot = dr, dpi = "print", device = "pdf", width = 15, height = 15, units = "in")
# dev.off()

```
